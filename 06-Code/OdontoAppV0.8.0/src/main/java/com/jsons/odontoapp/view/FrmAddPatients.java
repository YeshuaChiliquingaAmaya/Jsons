/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.jsons.odontoapp.view;

import com.jsons.odontoapp.model.Appointment;
import com.jsons.odontoapp.model.ClinicalHistory;
import com.jsons.odontoapp.model.Patient;
import com.jsons.odontoapp.model.Service;
import java.awt.Color;
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Ruben Benavides, Jsons, DCCO-ESPE
 */
public class FrmAddPatients extends javax.swing.JFrame {

    Patient patient = new Patient();
    ClinicalHistory clinicalHistory = new ClinicalHistory();
    ArrayList<Appointment> appointments = new ArrayList<Appointment>();
    ArrayList<Service> acquiredServices = new ArrayList<Service>();
    
    /**
     * Creates new form FrmAddPatients
     */
    public FrmAddPatients() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSymptoms = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtCellPhoneNumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        txtSystemicDiseases = new javax.swing.JTextField();
        lblNameWarning = new javax.swing.JLabel();
        lblIdWarning = new javax.swing.JLabel();
        lblAgeWarning = new javax.swing.JLabel();
        lblWeightWarning = new javax.swing.JLabel();
        lblHeightWarning = new javax.swing.JLabel();
        lblContactNumber = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPatientTreatment = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btnAddPatient = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setText("Id:");

        jLabel7.setText("Nombre:");

        jLabel8.setText("Edad:");

        jLabel9.setText("Peso en kg (separe con puntos):");

        jLabel10.setText("Síntomas:");

        txtSymptoms.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSymptomsKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtSymptoms);
        txtSymptoms.getAccessibleContext().setAccessibleParent(jPanel1);

        jLabel11.setText("Número de contacto:");

        jLabel12.setText("Enfermedades Sistemáticas:");

        txtId.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtIdInputMethodTextChanged(evt);
            }
        });
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdKeyReleased(evt);
            }
        });

        txtName.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                txtNameComponentAdded(evt);
            }
        });
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });

        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
        });

        txtWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWeightActionPerformed(evt);
            }
        });
        txtWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWeightKeyReleased(evt);
            }
        });

        txtCellPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCellPhoneNumberActionPerformed(evt);
            }
        });
        txtCellPhoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCellPhoneNumberKeyReleased(evt);
            }
        });

        jLabel1.setText("Altura en cm (separe con puntos):");

        txtHeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHeightKeyReleased(evt);
            }
        });

        txtSystemicDiseases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSystemicDiseasesActionPerformed(evt);
            }
        });
        txtSystemicDiseases.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSystemicDiseasesKeyReleased(evt);
            }
        });

        lblContactNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblContactNumberKeyReleased(evt);
            }
        });

        jLabel2.setText("Tratamiento del Paciente:");

        txtPatientTreatment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPatientTreatmentKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1022, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnAddPatient.setText("Añadir");
        btnAddPatient.setEnabled(false);
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddPatient)
                .addGap(399, 399, 399)
                .addComponent(jButton1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnAddPatient))
                .addContainerGap())
        );

        jLabel3.setText("Fecha de Inicio de Tratamiento:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIdWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(180, 180, 180)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtPatientTreatment, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNameWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAgeWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCellPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblWeightWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHeightWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSystemicDiseases, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblIdWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblNameWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblAgeWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblWeightWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(txtCellPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtPatientTreatment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblHeightWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(txtSystemicDiseases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(200, 200, 200)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel6.getAccessibleContext().setAccessibleParent(jPanel1);
        jLabel7.getAccessibleContext().setAccessibleParent(jPanel1);
        jLabel8.getAccessibleContext().setAccessibleParent(jPanel1);
        jLabel9.getAccessibleContext().setAccessibleParent(jPanel1);
        jLabel10.getAccessibleContext().setAccessibleParent(jPanel1);
        jLabel11.getAccessibleContext().setAccessibleParent(jPanel1);
        jLabel12.getAccessibleContext().setAccessibleParent(jPanel1);
        txtId.getAccessibleContext().setAccessibleParent(jPanel1);
        txtName.getAccessibleContext().setAccessibleParent(jPanel1);
        txtAge.getAccessibleContext().setAccessibleParent(jPanel1);
        txtWeight.getAccessibleContext().setAccessibleParent(jPanel1);
        txtCellPhoneNumber.getAccessibleContext().setAccessibleParent(jPanel1);
        jLabel1.getAccessibleContext().setAccessibleParent(jPanel1);
        txtHeight.getAccessibleContext().setAccessibleParent(jPanel1);
        txtSystemicDiseases.getAccessibleContext().setAccessibleParent(jPanel1);
        lblNameWarning.getAccessibleContext().setAccessibleParent(jPanel1);
        lblIdWarning.getAccessibleContext().setAccessibleParent(jPanel1);
        lblAgeWarning.getAccessibleContext().setAccessibleParent(jPanel1);
        lblWeightWarning.getAccessibleContext().setAccessibleParent(jPanel1);
        lblHeightWarning.getAccessibleContext().setAccessibleParent(jPanel1);
        lblContactNumber.getAccessibleContext().setAccessibleParent(jPanel1);
        jLabel2.getAccessibleContext().setAccessibleParent(jPanel1);
        txtPatientTreatment.getAccessibleContext().setAccessibleParent(jPanel1);
        jPanel1.getAccessibleContext().setAccessibleParent(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed

    }//GEN-LAST:event_txtNameActionPerformed

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        patient.setClinicalHistory(clinicalHistory);
        patient.setAppointments(appointments);
        patient.setAcquiredServices(acquiredServices);
        int option = JOptionPane.showConfirmDialog(this,"Está segura de que desea añadir a: \n" + patient.OnlyPatientsToString(), "saving warning",1);
        if(option == 0){
            JOptionPane.showMessageDialog(rootPane, "saved, saving..");
            //PatientController.add(patient);
            clearFields();
        }
        if(option == 1){
            JOptionPane.showMessageDialog(rootPane, "not saved");
            clearFields();
        }
        if(option == 2){
            JOptionPane.showMessageDialog(rootPane, "canceled");
        }
        
    }//GEN-LAST:event_btnAddPatientActionPerformed

    public void readTreatmentStartDate(){
        Date treatmentStartDate = new Date(2023,07,8);
        clinicalHistory.setTreatmentDateStart(treatmentStartDate);
    }
    
    public void readTreatmentEndDate(){
        Date treatmentEndDate = new Date(2023,07,9);
        clinicalHistory.setTreatmentEndDate(treatmentEndDate);
    }
    
    private void clearFields() {
        txtId.setText("");
        txtName.setText("");
        txtAge.setText("");
        txtWeight.setText("");
        txtHeight.setText("");
        txtSymptoms.setText("");
        txtCellPhoneNumber.setText("");
        txtSystemicDiseases.setText("");
    }
    
    private void txtWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWeightActionPerformed

    private void txtNameComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_txtNameComponentAdded

    }//GEN-LAST:event_txtNameComponentAdded

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped

    }//GEN-LAST:event_txtNameKeyTyped

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        String name;
        if(txtName.getText().matches("[A-Za-z ]*")){
            lblNameWarning.setVisible(false);
            btnAddPatient.setEnabled(true);
            name = txtName.getText();
            clinicalHistory.setName(name);
        }else{
            lblNameWarning.setText("Ingrese solo nombres validos.");
            lblNameWarning.setForeground(Color.red);
            lblNameWarning.setVisible(true);
            btnAddPatient.setEnabled(false);
        }
        txtName.getParent().revalidate();
        txtName.getParent().repaint();
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed

    }//GEN-LAST:event_txtIdActionPerformed

    private void txtIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyReleased
        int id;
        if (txtId.getText().matches("\\d*") && !txtId.getText().isEmpty()) {
            id = Integer.parseInt(txtId.getText()) ;
            if (id >= 0) {
                lblIdWarning.setVisible(false);
                btnAddPatient.setEnabled(true);
                //Validation of the id with the database
                 clinicalHistory.setId(id);
            } else {
                lblIdWarning.setText("Ingrese solo numeros positivos");
                lblIdWarning.setForeground(Color.red);
                lblIdWarning.setVisible(true);
                btnAddPatient.setEnabled(false);
            }
        }else{
            lblIdWarning.setText("Ingrese solo numeros enteros");
            lblIdWarning.setForeground(Color.red);
            lblIdWarning.setVisible(true);
            btnAddPatient.setEnabled(false);
        }
        txtId.getParent().revalidate();
        txtId.getParent().repaint();
    }//GEN-LAST:event_txtIdKeyReleased

    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        int age;
        if (txtAge.getText().matches("\\d*") && !txtAge.getText().isEmpty()) {
            age = Integer.parseInt(txtAge.getText()) ;
            if (age >= 0) {
                lblAgeWarning.setVisible(false);
                btnAddPatient.setEnabled(true);
                clinicalHistory.setAge(age);
            } else {
                lblAgeWarning.setText("Ingrese solo numeros positivos");
                lblAgeWarning.setForeground(Color.red);
                lblAgeWarning.setVisible(true);
                btnAddPatient.setEnabled(false);
            }
        }else{
            lblAgeWarning.setText("Ingrese solo numeros enteros");
            lblAgeWarning.setForeground(Color.red);
            lblAgeWarning.setVisible(true);
            btnAddPatient.setEnabled(false);
        }
        txtAge.getParent().revalidate();
        txtAge.getParent().repaint();
    }//GEN-LAST:event_txtAgeKeyReleased

    private void txtIdInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtIdInputMethodTextChanged
        
    }//GEN-LAST:event_txtIdInputMethodTextChanged

    private void txtWeightKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWeightKeyReleased
        double weight;
        if (txtWeight.getText().matches("\\d*\\.?\\d*") && !txtWeight.getText().isEmpty()) {
            weight = Double.parseDouble(txtWeight.getText());
            if (weight >= 0) {
                lblWeightWarning.setVisible(false);
                btnAddPatient.setEnabled(true);
                clinicalHistory.setWeight(weight);
            } else {
                lblWeightWarning.setText("Ingrese solo numeros positivos");
                lblWeightWarning.setForeground(Color.red);
                lblWeightWarning.setVisible(true);
                btnAddPatient.setEnabled(false);
            }
        } else {
            lblWeightWarning.setText("Ingrese un número válido");
            lblWeightWarning.setForeground(Color.red);
            lblWeightWarning.setVisible(true);
            btnAddPatient.setEnabled(false);
        }
        txtWeight.getParent().revalidate();
        txtWeight.getParent().repaint();
    }//GEN-LAST:event_txtWeightKeyReleased

    private void txtHeightKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeightKeyReleased
        double height;
        if (txtHeight.getText().matches("\\d*\\.?\\d*") && !txtHeight.getText().isEmpty()) {
            height = Double.parseDouble(txtHeight.getText());
            if (height >= 0) {
                lblHeightWarning.setVisible(false);
                btnAddPatient.setEnabled(true);
                clinicalHistory.setHeight(height);
            } else {
                lblHeightWarning.setText("Ingrese solo numeros positivos");
                lblHeightWarning.setForeground(Color.red);
                lblHeightWarning.setVisible(true);
                btnAddPatient.setEnabled(false);
            }
        } else {
            lblHeightWarning.setText("Ingrese un número válido");
            lblHeightWarning.setForeground(Color.red);
            lblHeightWarning.setVisible(true);
            btnAddPatient.setEnabled(false);
        }
        txtHeight.getParent().revalidate();
        txtHeight.getParent().repaint();
    }//GEN-LAST:event_txtHeightKeyReleased

    private void lblContactNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblContactNumberKeyReleased

    }//GEN-LAST:event_lblContactNumberKeyReleased

    private void txtCellPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCellPhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCellPhoneNumberActionPerformed

    private void txtCellPhoneNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCellPhoneNumberKeyReleased
        String cellphone;
        if (txtCellPhoneNumber.getText().matches("[0-9-\\s()]*")) {
            lblContactNumber.setVisible(false);
            btnAddPatient.setEnabled(true);
            cellphone = txtCellPhoneNumber.getText();
            clinicalHistory.setCellphone(cellphone);
        } else {
            lblContactNumber.setText("Ingrese solo numeros validos.");
            lblContactNumber.setForeground(Color.red);
            lblContactNumber.setVisible(true);
            btnAddPatient.setEnabled(false);
        }
        txtCellPhoneNumber.getParent().revalidate();
        txtCellPhoneNumber.getParent().repaint();
    }//GEN-LAST:event_txtCellPhoneNumberKeyReleased

    private void txtSymptomsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSymptomsKeyReleased
        String diseaseSymptoms;
        diseaseSymptoms = txtSymptoms.getText();
        clinicalHistory.setDiseaseSymptoms(diseaseSymptoms);
    }//GEN-LAST:event_txtSymptomsKeyReleased

    private void txtSystemicDiseasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSystemicDiseasesActionPerformed

    }//GEN-LAST:event_txtSystemicDiseasesActionPerformed

    private void txtSystemicDiseasesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSystemicDiseasesKeyReleased
        String systemicDiseases;
        systemicDiseases = txtSystemicDiseases.getText();
        clinicalHistory.setSystemicDiseases(systemicDiseases);
    }//GEN-LAST:event_txtSystemicDiseasesKeyReleased

    private void txtPatientTreatmentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatientTreatmentKeyReleased
        String patientTreatment;
        patientTreatment = txtPatientTreatment.getText();
        clinicalHistory.setPatientTreatment(patientTreatment);
    }//GEN-LAST:event_txtPatientTreatmentKeyReleased
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAddPatients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAddPatients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAddPatients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAddPatients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAddPatients().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAgeWarning;
    private javax.swing.JLabel lblContactNumber;
    private javax.swing.JLabel lblHeightWarning;
    private javax.swing.JLabel lblIdWarning;
    private javax.swing.JLabel lblNameWarning;
    private javax.swing.JLabel lblWeightWarning;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCellPhoneNumber;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPatientTreatment;
    private javax.swing.JTextPane txtSymptoms;
    private javax.swing.JTextField txtSystemicDiseases;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
